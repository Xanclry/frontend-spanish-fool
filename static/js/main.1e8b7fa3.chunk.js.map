{"version":3,"sources":["components/pages/game/table/chest-component/chestComponent.module.scss","components/pages/menu/main-menu.module.scss","model/card/picture-provider/cardPictureProvider.module.scss","components/pages/auth/auth.module.scss","components/pages/game/table/player/hand/playerHand.module.scss","components/pages/game/table/card-stack-component/cardStackComponent.module.scss","components/pages/game/table/discard-pile-component/discardPileComponent.module.scss","components/pages/game/table/opponent/opponent-component/hand/opponentHand.module.scss","components/pages/game/table/opponent/opponentsGroup.module.scss","components/pages/game/table/opponent/opponent-component/opponentComponent.module.scss","components/pages/game/table/game-table.module.scss","firebase-config.ts","context/auth-context.tsx","components/pages/menu/main-menu.tsx","state/table/player-deck/playerDeckSlice.ts","model/card/ranks.ts","utils/card-utils.ts","model/card/suit.ts","state/table/opponents-deck/opponentsDecksSlice.ts","model/card/picture-provider/face/faceCardPictureProvider.tsx","model/card/picture-provider/back/backCardPictureProvider.tsx","model/card/picture-provider/cardPictureProvider.tsx","components/pages/game/table/card-component/cardComponent.tsx","components/pages/game/table/card-stack-component/cardStackComponent.tsx","state/table/card-stack/cardStackSlice.ts","components/pages/game/table/discard-pile-component/discardPileComponent.tsx","state/table/discard-pile/discardPileSlice.ts","components/pages/game/table/chest-component/chestComponent.tsx","components/pages/game/table/opponent/opponent-component/hand/opponentHand.tsx","config.ts","components/pages/game/table/opponent/opponent-component/opponentComponent.tsx","components/pages/game/table/opponent/opponentsGroup.tsx","components/pages/game/table/chest-component/player-chest-component.tsx","components/pages/game/table/player/hand/playerHand.tsx","components/pages/game/table/game-table.tsx","components/pages/settings/settings-page.tsx","components/pages/game/lobby-select/lobby-select.tsx","components/pages/game/lobby/lobby.tsx","auth/private-route.tsx","components/pages/auth/login.tsx","components/pages/auth/signup.tsx","components/pages/profile/Profile.tsx","components/app/app.tsx","state/rootReducer.ts","state/index.ts","index.tsx"],"names":["module","exports","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","AuthContext","React","createContext","currentUser","login","Promise","resolve","undefined","signup","logout","useAuth","useContext","AuthProvider","children","useState","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","email","password","signInWithEmailAndPassword","createUserWithEmailAndPassword","signOut","Provider","MainMenu","error","setError","history","useHistory","handleLogout","a","push","console","Alert","variant","className","styles","panelWrap","to","item","panelItemWrap","Button","onClick","playerDeckSlice","createSlice","name","initialState","hand","chest","reducers","addCardToHand","state","action","payload","addCardToChest","deleteTopCard","topCard","deleteChest","splice","removeAllCards","removeCard","cardToRemove","index","findIndex","card","rank","suit","playerDeckActions","actions","Ranks","CARD_ARRAY","logo","sort","Math","random","iterator","getRandomCard","length","getCardId","JSON","stringify","opponentsDecksSlice","opponentsCount","opponents","addOpponent","opponentHand","playerId","Date","now","handCardCount","deleteOpponent","find","opp","filter","deleteAllOpponents","addCard","oldOpponentStateIndex","addChestItem","newChestItem","bottomCard","opponentsDecksActions","suitNameAdapter","charAt","rankNameAdapter","FaceCardPictureProvider","cardPicture","src","alt","BackCardPictureProvider","CardPictureProvider","CardComponent","innerRef","ref","CardStackComponent","cardComponents","cards","map","isDragDisabled","draggableId","provided","draggableProps","dragHandleProps","mainWrap","droppableId","cardPile","droppableProps","placeholder","cardStackSlice","addCardsToStack","clearStack","cardStackActions","DiscardPileComponent","cardsAmount","Array","fill","_","pile","discardPileSlice","cardAmount","addOneCard","addCards","clearPile","discardPileActions","ChestComponent","chestItems","chestWrap","chestItemWrap","v4","OpponentHand","cardsElementArray","i","uuid","handWrap","createBrowserHistory","OpponentComponent","opponent","dispatch","useDispatch","opponentWrap","OpponentsGroup","opponentsWrap","PlayerChestComponent","bottomCardComponent","isDropDisabled","toString","style","maxWidth","topCardComponent","cardCompareFunction","b","indexOf","PlayerHand","sortedCards","minHeight","cardsWrap","cardItem","zIndex","GameTable","playerHand","useSelector","player","playerChestItems","cardStack","stack","discardPileCardsAmount","discardPile","debugPanel","newCard","newChestPair","amount","onDragEnd","result","droppedCard","parse","source","destination","log","SettingsPage","LobbySelectPage","LobbyPage","PrivateRoute","Component","component","rest","render","props","Login","emailRef","useRef","passwordRef","event","preventDefault","current","Card","Body","Form","onSubmit","Group","id","Label","Control","type","required","disabled","Signup","passwordConfirmRef","Profile","uid","App","path","exact","rootReducer","combineReducers","reducer","store","configureStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e8b7fa3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"chestWrap\":\"chestComponent_chestWrap__36fKL\",\"chestItemWrap\":\"chestComponent_chestItemWrap__lO0AC\",\"topCard\":\"chestComponent_topCard__yiqcj\",\"bottomCard\":\"chestComponent_bottomCard__2bQHF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panelWrap\":\"main-menu_panelWrap__2ajoO\",\"panelItemWrap\":\"main-menu_panelItemWrap__ogOxH\",\"item\":\"main-menu_item__2fQFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardPicture\":\"cardPictureProvider_cardPicture__1bUfg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrap\":\"auth_mainWrap__OklYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrap\":\"playerHand_mainWrap__3AB8e\",\"cardsWrap\":\"playerHand_cardsWrap__1uMFP\",\"cardItem\":\"playerHand_cardItem__2r-pL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrap\":\"cardStackComponent_mainWrap__bkODB\",\"cardPile\":\"cardStackComponent_cardPile__2Wtru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrap\":\"discardPileComponent_mainWrap__2ncMs\",\"pile\":\"discardPileComponent_pile__30N6k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrap\":\"opponentHand_mainWrap__19pSM\",\"handWrap\":\"opponentHand_handWrap__OqI2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrap\":\"opponentsGroup_mainWrap__1z-lg\",\"opponentsWrap\":\"opponentsGroup_opponentsWrap__2YnYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"opponentWrap\":\"opponentComponent_opponentWrap__2Otat\",\"chestWrap\":\"opponentComponent_chestWrap__1DSI4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"debugPanel\":\"game-table_debugPanel__1MXc2\"};","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n}\r\n\r\nconst app = firebase.initializeApp(firebaseConfig)\r\nfirebase.analytics()\r\n\r\nexport const auth = app.auth()\r\nexport default app\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport firebase from 'firebase'\r\nimport { auth } from '../firebase-config'\r\n\r\ninterface AuthContextInterface {\r\n  currentUser: firebase.User | null\r\n  login: (email: string, password: string) => Promise<firebase.auth.UserCredential> | Promise<void>\r\n  signup: (email: string, password: string) => Promise<firebase.auth.UserCredential> | Promise<void>\r\n  logout: () => Promise<void>\r\n}\r\n\r\nconst AuthContext = React.createContext<AuthContextInterface>({\r\n  currentUser: null,\r\n  login(): Promise<firebase.auth.UserCredential> | Promise<void> {\r\n    return Promise.resolve(undefined)\r\n  },\r\n  signup(): Promise<firebase.auth.UserCredential> | Promise<void> {\r\n    return Promise.resolve(undefined)\r\n  },\r\n  logout(): Promise<void> {\r\n    return Promise.resolve(undefined)\r\n  },\r\n})\r\n\r\ninterface Props {\r\n  children: any\r\n}\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext)\r\n}\r\n\r\nexport const AuthProvider = ({ children }: Props) => {\r\n  const [currentUser, setCurrentUser] = useState<firebase.User | null>(null)\r\n  const [loading, setLoading] = useState<boolean>(true)\r\n\r\n  const signup = (email: string, password: string) => {\r\n    return auth.createUserWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  const login = (email: string, password: string) => {\r\n    return auth.signInWithEmailAndPassword(email, password)\r\n  }\r\n\r\n  const logout = () => {\r\n    return auth.signOut()\r\n  }\r\n\r\n  useEffect(() => {\r\n    return auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      setLoading(false)\r\n    })\r\n  }, [])\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    logout,\r\n  }\r\n\r\n  return <AuthContext.Provider value={value}>{!loading && children}</AuthContext.Provider>\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport styles from './main-menu.module.scss'\r\nimport { useAuth } from '../../../context/auth-context'\r\nimport { Alert, Button } from 'react-bootstrap'\r\n\r\nexport const MainMenu = () => {\r\n  const [error, setError] = useState<string>('')\r\n  const { currentUser, logout } = useAuth()\r\n  const history = useHistory()\r\n\r\n  const handleLogout = async () => {\r\n    setError('')\r\n\r\n    try {\r\n      await logout()\r\n      history.push('/login')\r\n    } catch (error) {\r\n      setError('Failed to log out')\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Main Menu</h1>\r\n      <h2>Hello!</h2>\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      <div className={styles.panelWrap}>\r\n        <Link to={'/game/lobby-select'}>\r\n          <div className={styles.item}>Play</div>\r\n        </Link>\r\n        <div className={styles.panelWrap}>\r\n          <Link to={'/settings'}>\r\n            <div className={styles.item}>Settings</div>\r\n          </Link>\r\n        </div>\r\n        {currentUser ? (\r\n          <>\r\n            <Link to={'/profile'}>\r\n              <div className={styles.item}>Profile</div>\r\n            </Link>\r\n            <div className={styles.panelItemWrap}>\r\n              <Button onClick={handleLogout}>Log Out</Button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <Link to={'/login'}>\r\n            <div className={styles.item}>Log in</div>\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { Card } from '../../../model/card/card'\r\nimport { ChestPair } from '../../../model/chest/chest-pair'\r\n\r\ninterface PlayerDeckState {\r\n  hand: Card[]\r\n  chest: ChestPair[]\r\n}\r\n\r\nconst initialState = { hand: [], chest: [] } as PlayerDeckState\r\n\r\nexport const playerDeckSlice = createSlice({\r\n  name: 'playerDeck',\r\n  initialState,\r\n  reducers: {\r\n    addCardToHand: (state, action: PayloadAction<Card>) => {\r\n      state.hand.push(action.payload)\r\n    },\r\n    addCardToChest: (state, action: PayloadAction<ChestPair>) => {\r\n      state.chest.push(action.payload)\r\n    },\r\n    deleteTopCard: (state, action: PayloadAction<number>) => {\r\n      state.chest[action.payload].topCard = null\r\n    },\r\n    deleteChest: (state, action: PayloadAction<number>) => {\r\n      state.chest.splice(action.payload, 1)\r\n    },\r\n    removeAllCards: state => {\r\n      state.hand = []\r\n      state.chest = []\r\n    },\r\n    removeCard: (state, action: PayloadAction<Card>) => {\r\n      const cardToRemove = action.payload\r\n      const index = state.hand.findIndex(\r\n        card => card.rank.name === cardToRemove.rank.name && card.suit.name === cardToRemove.suit.name\r\n      )\r\n      if (index !== -1) state.hand.splice(index, 1)\r\n    },\r\n  },\r\n})\r\n\r\nexport default playerDeckSlice.reducer\r\nexport const playerDeckActions = playerDeckSlice.actions\r\n","export interface Rank {\r\n  name: string\r\n}\r\n\r\nexport const Ranks: Rank[] = [\r\n  { name: '2' },\r\n  { name: '3' },\r\n  { name: '4' },\r\n  { name: '5' },\r\n  { name: '6' },\r\n  { name: '7' },\r\n  { name: '8' },\r\n  { name: '9' },\r\n  { name: '10' },\r\n  { name: 'Jack' },\r\n  { name: 'Queen' },\r\n  { name: 'King' },\r\n  { name: 'Ace' },\r\n]\r\n","import { Card } from '../model/card/card'\r\nimport { Suits } from '../model/card/suit'\r\nimport { Ranks } from '../model/card/ranks'\r\n\r\nconst CARD_ARRAY: Card[] = []\r\nfor (const suit of Suits) {\r\n  for (const rank of Ranks) {\r\n    CARD_ARRAY.push({ suit, rank } as Card)\r\n  }\r\n}\r\nCARD_ARRAY.sort(() => Math.random() - 0.5)\r\nlet iterator = 0\r\n\r\nexport const getRandomCard = () => {\r\n  // const newCard: Card = {\r\n  //   suit: Suits[Math.floor(Math.random() * Suits.length)],\r\n  //   rank: Ranks[Math.floor(Math.random() * Ranks.length)],\r\n  // }\r\n  // return newCard\r\n  if (iterator === CARD_ARRAY.length) {\r\n    iterator = 0\r\n  } else {\r\n    iterator += 1\r\n  }\r\n  return CARD_ARRAY[iterator]\r\n}\r\n\r\nexport const getCardId = (card: Card) => {\r\n  return JSON.stringify(card)\r\n}\r\n","export interface Suit {\r\n  name: string\r\n  logo: string\r\n}\r\n\r\nexport const Suits: Suit[] = [\r\n  { name: 'Hearts', logo: '♥' },\r\n  { name: 'Diamonds', logo: '♦' },\r\n  { name: 'Clubs', logo: '♣' },\r\n  { name: 'Spades', logo: '♠' },\r\n]\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { Opponent } from '../../../model/opponent/opponent'\r\nimport { Card } from '../../../model/card/card'\r\nimport { ChestPair } from '../../../model/chest/chest-pair'\r\n\r\ninterface OpponentsDecksState {\r\n  opponentsCount: number\r\n  opponents: Opponent[]\r\n}\r\n\r\nexport interface AddChestPayload {\r\n  playerId: number\r\n  topCard: Card\r\n}\r\n\r\nconst initialState = { opponentsCount: 0, opponents: [] } as OpponentsDecksState\r\n\r\nexport const opponentsDecksSlice = createSlice({\r\n  name: 'opponentsDecks',\r\n  initialState,\r\n  reducers: {\r\n    addOpponent: state => {\r\n      state.opponentsCount += 1\r\n      const opponentHand: Opponent = {\r\n        // todo get player id\r\n        playerId: Date.now(),\r\n        hand: {\r\n          handCardCount: 0,\r\n          chest: [],\r\n        },\r\n      }\r\n      state.opponents.push(opponentHand)\r\n    },\r\n    deleteOpponent: (state, action: PayloadAction<number>) => {\r\n      if (state.opponents.find(opp => opp.playerId === action.payload)) {\r\n        state.opponentsCount -= 1\r\n        state.opponents = state.opponents.filter(opp => opp.playerId !== action.payload)\r\n      }\r\n    },\r\n    deleteAllOpponents: state => {\r\n      state.opponentsCount = 0\r\n      state.opponents = []\r\n    },\r\n    addCard: (state, action: PayloadAction<number>) => {\r\n      const playerId = action.payload\r\n      const oldOpponentStateIndex = state.opponents.findIndex(opp => opp.playerId === playerId)\r\n      if (oldOpponentStateIndex !== -1) {\r\n        state.opponents[oldOpponentStateIndex].hand.handCardCount += 1\r\n      }\r\n    },\r\n    addChestItem: (state, action: PayloadAction<AddChestPayload>) => {\r\n      const { playerId, topCard } = action.payload\r\n      const oldOpponentStateIndex = state.opponents.findIndex(opp => opp.playerId === playerId)\r\n      if (oldOpponentStateIndex !== -1) {\r\n        const newChestItem: ChestPair = {\r\n          topCard,\r\n          bottomCard: null,\r\n        }\r\n        state.opponents[oldOpponentStateIndex].hand.chest.push(newChestItem)\r\n      }\r\n    },\r\n  },\r\n})\r\n\r\nexport default opponentsDecksSlice.reducer\r\nexport const opponentsDecksActions = opponentsDecksSlice.actions\r\n","import React from 'react'\r\nimport { Suit } from '../../suit'\r\nimport { Rank } from '../../ranks'\r\nimport { Card } from '../../card'\r\nimport styles from '../cardPictureProvider.module.scss'\r\n\r\ninterface Props {\r\n  card: Card\r\n}\r\n\r\nconst suitNameAdapter = (suit: Suit) => {\r\n  return suit.name.charAt(0)\r\n}\r\n\r\nconst rankNameAdapter = (rank: Rank) => {\r\n  if (rank.name === '10') return rank.name\r\n  return rank.name.charAt(0)\r\n}\r\n\r\nexport const FaceCardPictureProvider = ({ card }: Props) => {\r\n  const { suit, rank } = card\r\n\r\n  return (\r\n    <>\r\n      <img\r\n        className={styles.cardPicture}\r\n        src={process.env.PUBLIC_URL + '/cards/' + rankNameAdapter(rank) + suitNameAdapter(suit) + '.png'}\r\n        alt={suit.logo + rank.name}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styles from '../cardPictureProvider.module.scss'\r\n\r\nconst backOfCardName = () => {\r\n  // todo: implement\r\n  return 'purple_back'\r\n}\r\n\r\nexport const BackCardPictureProvider = () => {\r\n  return (\r\n    <>\r\n      <img\r\n        className={styles.cardPicture}\r\n        src={process.env.PUBLIC_URL + '/cards/' + backOfCardName() + '.png'}\r\n        alt=\"back of the card\"\r\n      />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Card } from '../card'\r\nimport { FaceCardPictureProvider } from './face/faceCardPictureProvider'\r\nimport { BackCardPictureProvider } from './back/backCardPictureProvider'\r\n\r\ninterface Props {\r\n  card: Card | null | undefined\r\n}\r\n\r\nexport const CardPictureProvider = ({ card }: Props) => {\r\n  if (card) return <FaceCardPictureProvider card={card} />\r\n  return <BackCardPictureProvider />\r\n}\r\n","import React from 'react'\r\nimport { Card } from '../../../../../model/card/card'\r\nimport { CardPictureProvider } from '../../../../../model/card/picture-provider/cardPictureProvider'\r\n\r\ninterface Props {\r\n  card: Card | null | undefined\r\n  innerRef?: any\r\n}\r\n\r\nexport const CardComponent = ({ card, innerRef }: Props) => {\r\n  return (\r\n    // <span style={{ zIndex: 10000 }} ref={innerRef}>\r\n    <span ref={innerRef}>\r\n      <CardPictureProvider card={card} />\r\n    </span>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Card } from '../../../../../model/card/card'\r\nimport styles from './cardStackComponent.module.scss'\r\nimport { CardComponent } from '../card-component/cardComponent'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { getCardId } from '../../../../../utils/card-utils'\r\n\r\ninterface CardStackProps {\r\n  cards: Card[]\r\n}\r\n\r\nexport const CardStackComponent = ({ cards }: CardStackProps) => {\r\n  const cardComponents = cards.map((card, index) => (\r\n    <Draggable key={getCardId(card)} isDragDisabled={true} draggableId={getCardId(card)} index={index}>\r\n      {provided => (\r\n        <CardComponent\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          innerRef={provided.innerRef}\r\n          card={card}\r\n        />\r\n      )}\r\n    </Draggable>\r\n  ))\r\n  return (\r\n    <div className={styles.mainWrap}>\r\n      <Droppable droppableId=\"card-stack\">\r\n        {provided => (\r\n          <div className={styles.cardPile} ref={provided.innerRef} {...provided.droppableProps}>\r\n            {cardComponents}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </div>\r\n  )\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { Card } from '../../../model/card/card'\r\n\r\ninterface CardStackState {\r\n  cards: Card[]\r\n}\r\n\r\nconst initialState = { cards: [] } as CardStackState\r\n\r\nexport const cardStackSlice = createSlice({\r\n  name: 'cardStack',\r\n  initialState,\r\n  reducers: {\r\n    addCardsToStack: (state, action: PayloadAction<Card[]>) => {\r\n      state.cards.push(...action.payload)\r\n    },\r\n    clearStack: state => {\r\n      state.cards = []\r\n    },\r\n  },\r\n})\r\n\r\nexport default cardStackSlice.reducer\r\nexport const cardStackActions = cardStackSlice.actions\r\n","import React from 'react'\r\nimport styles from './discardPileComponent.module.scss'\r\nimport { CardComponent } from '../card-component/cardComponent'\r\n\r\ninterface DiscardPileProps {\r\n  cardsAmount: number\r\n}\r\n\r\nexport const DiscardPileComponent = ({ cardsAmount }: DiscardPileProps) => {\r\n  const cards = Array(cardsAmount)\r\n    .fill({})\r\n    // eslint-disable-next-line id-length\r\n    .map((_, index) => <CardComponent key={index} card={null} />)\r\n  return (\r\n    <div className={styles.mainWrap}>\r\n      <div className={styles.pile}>{cards}</div>\r\n    </div>\r\n  )\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\n\r\ninterface DiscardPileState {\r\n  cardAmount: number\r\n}\r\n\r\nconst initialState = { cardAmount: 0 } as DiscardPileState\r\n\r\nexport const discardPileSlice = createSlice({\r\n  name: 'discardPile',\r\n  initialState,\r\n  reducers: {\r\n    addOneCard: state => {\r\n      state.cardAmount += 1\r\n    },\r\n    addCards: (state, action: PayloadAction<number>) => {\r\n      state.cardAmount += action.payload\r\n    },\r\n    clearPile: state => {\r\n      state.cardAmount = 0\r\n    },\r\n  },\r\n})\r\n\r\nexport default discardPileSlice.reducer\r\nexport const discardPileActions = discardPileSlice.actions\r\n","import { ChestPair } from '../../../../../model/chest/chest-pair'\r\nimport styles from './chestComponent.module.scss'\r\nimport { CardComponent } from '../card-component/cardComponent'\r\nimport { v4 } from 'uuid'\r\n\r\ninterface ChestComponentProps {\r\n  chestItems: ChestPair[]\r\n}\r\n\r\nexport const ChestComponent = ({ chestItems }: ChestComponentProps) => {\r\n  return (\r\n    <div className={styles.chestWrap}>\r\n      {chestItems.length\r\n        ? chestItems.map(item => (\r\n            <div key={v4()} className={styles.chestItemWrap}>\r\n              <span className={styles.topCard}>\r\n                <CardComponent card={item.topCard} />\r\n              </span>\r\n              <span className={styles.bottomCard}>\r\n                <CardComponent card={item.bottomCard} />\r\n              </span>\r\n            </div>\r\n          ))\r\n        : null}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { CardComponent } from '../../../card-component/cardComponent'\r\nimport styles from './opponentHand.module.scss'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\ninterface Props {\r\n  cardAmount: number\r\n}\r\n\r\nexport const OpponentHand = ({ cardAmount }: Props) => {\r\n  const cardsElementArray: JSX.Element[] = []\r\n  for (let i = 0; i < cardAmount; i++) {\r\n    cardsElementArray.push(<CardComponent key={uuid()} card={null} />)\r\n  }\r\n  return (\r\n    <div className={styles.mainWrap}>\r\n      <div className={styles.handWrap}>{cardsElementArray}</div>\r\n    </div>\r\n  )\r\n}\r\n","import { createBrowserHistory } from 'history'\r\n\r\nconst history = createBrowserHistory()\r\n\r\nconst debugMode = true\r\n\r\nexport { history, debugMode }\r\n","import React from 'react'\r\nimport { Opponent } from '../../../../../../model/opponent/opponent'\r\nimport { ChestComponent } from '../../chest-component/chestComponent'\r\nimport styles from './opponentComponent.module.scss'\r\nimport { useDispatch } from 'react-redux'\r\nimport { AppDispatch } from '../../../../../../state'\r\nimport { opponentsDecksActions } from '../../../../../../state/table/opponents-deck/opponentsDecksSlice'\r\nimport { getRandomCard } from '../../../../../../utils/card-utils'\r\nimport { OpponentHand } from './hand/opponentHand'\r\nimport { debugMode } from '../../../../../../config'\r\n\r\ninterface OpponentProps {\r\n  opponent: Opponent\r\n}\r\n\r\nexport const OpponentComponent = ({ opponent }: OpponentProps) => {\r\n  const dispatch = useDispatch<AppDispatch>()\r\n  const { playerId } = opponent\r\n\r\n  const deleteOpponent = () => {\r\n    dispatch(opponentsDecksActions.deleteOpponent(playerId))\r\n  }\r\n\r\n  const addCard = () => {\r\n    dispatch(opponentsDecksActions.addCard(playerId))\r\n  }\r\n\r\n  const addChestItem = () => {\r\n    const payload = {\r\n      playerId,\r\n      topCard: getRandomCard(),\r\n    }\r\n    dispatch(opponentsDecksActions.addChestItem(payload))\r\n  }\r\n\r\n  return (\r\n    <div className={styles.opponentWrap}>\r\n      {debugMode && (\r\n        <div>\r\n          <button onClick={deleteOpponent}>Delete the opponent</button>\r\n          <button onClick={addCard}>Add a card</button>\r\n          <button onClick={addChestItem}>Add a random chest item</button>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <OpponentHand cardAmount={opponent.hand.handCardCount} />\r\n      </div>\r\n      <div>\r\n        <ChestComponent chestItems={opponent.hand.chest} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Opponent } from '../../../../../model/opponent/opponent'\r\nimport { OpponentComponent } from './opponent-component/opponentComponent'\r\nimport styles from './opponentsGroup.module.scss'\r\nimport { v4 } from 'uuid'\r\n\r\ninterface Props {\r\n  opponents: Opponent[]\r\n}\r\n\r\nexport const OpponentsGroup = ({ opponents }: Props) => {\r\n  return (\r\n    <div className={styles.mainWrap}>\r\n      <div className={styles.opponentsWrap}>\r\n        {opponents.map(opp => (\r\n          <OpponentComponent key={v4()} opponent={opp} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { ChestPair } from '../../../../../model/chest/chest-pair'\r\nimport styles from './chestComponent.module.scss'\r\nimport { CardComponent } from '../card-component/cardComponent'\r\nimport { Draggable, DraggableProvided, Droppable } from 'react-beautiful-dnd'\r\nimport { getCardId } from '../../../../../utils/card-utils'\r\nimport React from 'react'\r\nimport { v4 } from 'uuid'\r\n\r\ninterface ChestComponentProps {\r\n  chestItems: ChestPair[]\r\n}\r\n\r\nexport const PlayerChestComponent = ({ chestItems }: ChestComponentProps) => {\r\n  const bottomCardComponent = (item: ChestPair, provided?: DraggableProvided) => {\r\n    return provided ? (\r\n      <span\r\n        ref={provided.innerRef}\r\n        {...provided.draggableProps}\r\n        {...provided.dragHandleProps}\r\n        className={styles.bottomCard}\r\n      >\r\n        <CardComponent card={item?.bottomCard} />\r\n      </span>\r\n    ) : (\r\n      <span className={styles.bottomCard}>\r\n        <CardComponent card={item?.bottomCard} />\r\n      </span>\r\n    )\r\n  }\r\n\r\n  const topCardComponent = (item: ChestPair, provided: DraggableProvided) => (\r\n    <span {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef} className={styles.topCard}>\r\n      <CardComponent card={item.topCard} />\r\n    </span>\r\n  )\r\n\r\n  return (\r\n    <div className={styles.chestWrap}>\r\n      {chestItems.length\r\n        ? chestItems.map((item, index) => (\r\n            <Droppable key={v4()} isDropDisabled={true} droppableId={index.toString(10)}>\r\n              {provided => (\r\n                <>\r\n                  <div\r\n                    className={styles.chestItemWrap}\r\n                    ref={provided.innerRef}\r\n                    {...provided.droppableProps}\r\n                    style={{ maxWidth: '100px' }}\r\n                  >\r\n                    {item.topCard && (\r\n                      <Draggable draggableId={getCardId(item.topCard)} index={2}>\r\n                        {provided => topCardComponent(item, provided)}\r\n                      </Draggable>\r\n                    )}\r\n                    {item.bottomCard ? (\r\n                      <Draggable\r\n                        isDragDisabled={item.topCard !== null}\r\n                        draggableId={getCardId(item.bottomCard)}\r\n                        index={1}\r\n                      >\r\n                        {provided => bottomCardComponent(item, provided)}\r\n                      </Draggable>\r\n                    ) : (\r\n                      bottomCardComponent(item)\r\n                    )}\r\n                  </div>\r\n                  {/*{provided.placeholder}*/}\r\n                </>\r\n              )}\r\n            </Droppable>\r\n          ))\r\n        : null}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Card } from '../../../../../../model/card/card'\r\nimport { ChestPair } from '../../../../../../model/chest/chest-pair'\r\nimport styles from './playerHand.module.scss'\r\nimport { CardComponent } from '../../card-component/cardComponent'\r\nimport { Ranks } from '../../../../../../model/card/ranks'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { getCardId } from '../../../../../../utils/card-utils'\r\nimport { PlayerChestComponent } from '../../chest-component/player-chest-component'\r\n\r\ninterface Props {\r\n  cards: Card[]\r\n  chestItems: ChestPair[]\r\n}\r\n\r\n// eslint-disable-next-line id-length\r\nconst cardCompareFunction = (a: Card, b: Card): number => {\r\n  return Ranks.indexOf(a.rank) - Ranks.indexOf(b.rank)\r\n}\r\n\r\nexport const PlayerHand = ({ cards, chestItems }: Props) => {\r\n  const sortedCards = [...cards]\r\n  sortedCards.sort(cardCompareFunction)\r\n  return (\r\n    <div className={styles.mainWrap}>\r\n      <div>\r\n        <PlayerChestComponent chestItems={chestItems} />\r\n      </div>\r\n      <div style={cards.length ? { minHeight: '120px' } : {}} className={styles.cardsWrap}>\r\n        <Droppable isDropDisabled={true} droppableId=\"player-hand\">\r\n          {provided => (\r\n            <div ref={provided.innerRef} {...provided.droppableProps}>\r\n              {sortedCards.length\r\n                ? sortedCards.map((card, index) => (\r\n                    <Draggable key={getCardId(card)} draggableId={getCardId(card)} index={index}>\r\n                      {provided => (\r\n                        <span\r\n                          className={styles.cardItem}\r\n                          style={{ zIndex: 1000 }}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          ref={provided.innerRef}\r\n                        >\r\n                          <CardComponent key={getCardId(card)} card={card} />\r\n                        </span>\r\n                      )}\r\n                    </Draggable>\r\n                  ))\r\n                : null}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../../../state/rootReducer'\r\nimport { AppDispatch } from '../../../../state'\r\nimport { playerDeckActions } from '../../../../state/table/player-deck/playerDeckSlice'\r\nimport { Card } from '../../../../model/card/card'\r\nimport { getRandomCard } from '../../../../utils/card-utils'\r\nimport { ChestPair } from '../../../../model/chest/chest-pair'\r\nimport { opponentsDecksActions } from '../../../../state/table/opponents-deck/opponentsDecksSlice'\r\nimport { CardStackComponent } from './card-stack-component/cardStackComponent'\r\nimport { cardStackActions } from '../../../../state/table/card-stack/cardStackSlice'\r\nimport { DiscardPileComponent } from './discard-pile-component/discardPileComponent'\r\nimport { discardPileActions } from '../../../../state/table/discard-pile/discardPileSlice'\r\nimport { OpponentsGroup } from './opponent/opponentsGroup'\r\nimport { PlayerHand } from './player/hand/playerHand'\r\nimport styles from './game-table.module.scss'\r\nimport { debugMode } from '../../../../config'\r\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd'\r\n\r\nexport const GameTable = () => {\r\n  const playerHand = useSelector((state: RootState) => state.player.hand)\r\n  const playerChestItems = useSelector((state: RootState) => state.player.chest)\r\n  const cardStack = useSelector((state: RootState) => state.stack.cards)\r\n  const discardPileCardsAmount = useSelector((state: RootState) => state.discardPile.cardAmount)\r\n\r\n  const opponents = useSelector((state: RootState) => state.opponents.opponents)\r\n\r\n  const dispatch = useDispatch<AppDispatch>()\r\n\r\n  const addRandomCardToHand = () => {\r\n    const newCard: Card = getRandomCard()\r\n    dispatch(playerDeckActions.addCardToHand(newCard))\r\n  }\r\n\r\n  const addRandomChestItem = () => {\r\n    const newChestPair: ChestPair = { topCard: getRandomCard(), bottomCard: null }\r\n    dispatch(playerDeckActions.addCardToChest(newChestPair))\r\n  }\r\n  const addRandomEmptyChestItem = () => {\r\n    const newChestPair: ChestPair = { topCard: null, bottomCard: getRandomCard() }\r\n    dispatch(playerDeckActions.addCardToChest(newChestPair))\r\n  }\r\n\r\n  const deleteAllCards = () => {\r\n    dispatch(playerDeckActions.removeAllCards())\r\n  }\r\n\r\n  const addOpponent = () => {\r\n    dispatch(opponentsDecksActions.addOpponent())\r\n  }\r\n\r\n  const addRandomCardToStack = () => {\r\n    dispatch(cardStackActions.addCardsToStack([getRandomCard()]))\r\n  }\r\n\r\n  const clearCardStack = () => {\r\n    dispatch(cardStackActions.clearStack())\r\n  }\r\n\r\n  const addCardsToDiscardPile = (amount: number) => {\r\n    dispatch(discardPileActions.addCards(amount))\r\n  }\r\n\r\n  const clearDiscardPile = () => {\r\n    dispatch(discardPileActions.clearPile())\r\n  }\r\n\r\n  const onDragEnd = (result: DropResult) => {\r\n    // todo: implement\r\n    const droppedCard = JSON.parse(result.draggableId)\r\n    const { source, destination } = result\r\n\r\n    if (!destination) return\r\n    if (source.droppableId === destination.droppableId) return\r\n\r\n    dispatch(cardStackActions.addCardsToStack([droppedCard]))\r\n    if (result.source.droppableId === 'player-hand') {\r\n      dispatch(playerDeckActions.removeCard(droppedCard))\r\n      return\r\n    }\r\n    // bottom index = 1\r\n    // top index = 2\r\n    if (result.source.index === 2) {\r\n      dispatch(playerDeckActions.deleteTopCard(+result.source.droppableId))\r\n    } else {\r\n      dispatch(playerDeckActions.deleteChest(+result.source.droppableId))\r\n    }\r\n    console.log(result, ' ')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {debugMode && (\r\n        <div className={styles.debugPanel}>\r\n          <button onClick={addRandomCardToHand}>Add random card</button>\r\n          <button onClick={addRandomChestItem}>Add random chest item</button>\r\n          <br />\r\n          <button onClick={addRandomEmptyChestItem}>Add empty chest item</button>\r\n          <button onClick={deleteAllCards}>Delete all cards</button>\r\n          <br />\r\n          <button onClick={addOpponent}>Add opponent</button>\r\n          <br />\r\n          <button onClick={addRandomCardToStack}>Add card to stack</button>\r\n          <button onClick={clearCardStack}>Clear card stack</button>\r\n          <br />\r\n          <button onClick={() => addCardsToDiscardPile(1)}>Add one card to discard pile</button>\r\n          <button onClick={clearDiscardPile}>Clear discard pile</button>\r\n        </div>\r\n      )}\r\n\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <PlayerHand cards={playerHand} chestItems={playerChestItems} />\r\n        <OpponentsGroup opponents={opponents} />\r\n        <CardStackComponent cards={cardStack} />\r\n        <DiscardPileComponent cardsAmount={discardPileCardsAmount} />\r\n      </DragDropContext>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const SettingsPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>Settings page</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const LobbySelectPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>Select lobby</h1>\r\n      <li>\r\n        <ul>\r\n          <Link to={'/game/lobby'}>\r\n            <p>lobby 1</p>\r\n          </Link>\r\n        </ul>\r\n        <ul>\r\n          <Link to={'/game/lobby'}>\r\n            <p>lobby 2</p>\r\n          </Link>\r\n        </ul>\r\n        <ul>\r\n          <Link to={'/game/lobby'}>\r\n            <p>lobby 3</p>\r\n          </Link>\r\n        </ul>\r\n      </li>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const LobbyPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>Lobby</h1>\r\n      <div>\r\n        <br />\r\n        <p>Start game?</p>\r\n        <Link to={'/game/table'}>\r\n          <p>Go</p>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport { useAuth } from '../context/auth-context'\r\n\r\n// @ts-ignore\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React, { FormEvent, useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../../../context/auth-context'\r\nimport styles from './auth.module.scss'\r\n\r\nexport default function Login() {\r\n  const emailRef = useRef() as React.MutableRefObject<HTMLInputElement>\r\n  const passwordRef = useRef() as React.MutableRefObject<HTMLInputElement>\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      if (emailRef.current && passwordRef.current) {\r\n        setError('')\r\n        setLoading(true)\r\n        await login(emailRef.current.value, passwordRef.current.value)\r\n        history.push('/')\r\n      }\r\n    } catch {\r\n      setError('Failed to log in')\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-5 d-flex justify-content-center\">\r\n        <div className={styles.mainWrap}>\r\n          <Card>\r\n            <Card.Body>\r\n              <h2 className=\"text-center mb-4\">Log In</h2>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group id=\"email\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control type=\"email\" ref={emailRef} required />\r\n                </Form.Group>\r\n                <Form.Group id=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"password\" ref={passwordRef} required />\r\n                </Form.Group>\r\n                <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                  Log In\r\n                </Button>\r\n              </Form>\r\n              <div className=\"w-100 text-center mt-3\">\r\n                <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n              </div>\r\n            </Card.Body>\r\n          </Card>\r\n          <div className=\"w-100 text-center mt-2\">\r\n            Need an account? <Link to=\"/signup\">Sign Up</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React, { FormEvent, useRef, useState } from 'react'\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../../../context/auth-context'\r\nimport styles from './auth.module.scss'\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef() as React.MutableRefObject<HTMLInputElement>\r\n  const passwordRef = useRef() as React.MutableRefObject<HTMLInputElement>\r\n  const passwordConfirmRef = useRef() as React.MutableRefObject<HTMLInputElement>\r\n  const { signup } = useAuth()\r\n  const [error, setError] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(event: FormEvent<HTMLFormElement>) {\r\n    event.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError('Passwords do not match')\r\n    }\r\n\r\n    try {\r\n      setError('')\r\n      setLoading(true)\r\n      await signup(emailRef.current.value, passwordRef.current.value)\r\n      history.push('/')\r\n    } catch {\r\n      setError('Failed to create an account')\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-5 d-flex justify-content-center\">\r\n        <div className={styles.mainWrap}>\r\n          <Card>\r\n            <Card.Body>\r\n              <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group id=\"email\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control type=\"email\" ref={emailRef} required />\r\n                </Form.Group>\r\n                <Form.Group id=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"password\" ref={passwordRef} required />\r\n                </Form.Group>\r\n                <Form.Group id=\"password-confirm\">\r\n                  <Form.Label>Password Confirmation</Form.Label>\r\n                  <Form.Control type=\"password\" ref={passwordConfirmRef} required />\r\n                </Form.Group>\r\n                <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                  Sign Up\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n          <div className=\"w-100 text-center mt-2\">\r\n            Already have an account? <Link to=\"/login\">Log In</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useAuth } from '../../../context/auth-context'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from '../menu/main-menu.module.scss'\r\n\r\nexport const Profile = () => {\r\n  const { currentUser } = useAuth()\r\n\r\n  return (\r\n    <div>\r\n      <h1>Profile</h1>\r\n      <div>\r\n        <Link to={'/'}>\r\n          <div className={styles.item}>Back to main menu</div>\r\n        </Link>\r\n      </div>\r\n      <div>Email: {currentUser?.email}</div>\r\n      <div>UID: {currentUser?.uid}</div>\r\n      <br />\r\n      <div>{JSON.stringify(currentUser)}</div>\r\n    </div>\r\n  )\r\n}\r\n","import { MainMenu } from '../pages/menu/main-menu'\r\nimport { GameTable } from '../pages/game/table/game-table'\r\nimport { Route, Switch } from 'react-router'\r\nimport { SettingsPage } from '../pages/settings/settings-page'\r\nimport { LobbySelectPage } from '../pages/game/lobby-select/lobby-select'\r\nimport { LobbyPage } from '../pages/game/lobby/lobby'\r\nimport { AuthProvider } from '../../context/auth-context'\r\nimport PrivateRoute from '../../auth/private-route'\r\nimport Login from '../pages/auth/login'\r\nimport Signup from '../pages/auth/signup'\r\nimport { Profile } from '../pages/profile/Profile'\r\n\r\nexport const App = () => {\r\n  return (\r\n    <>\r\n      <AuthProvider>\r\n        <Switch>\r\n          <Route path={'/'} exact component={MainMenu} />\r\n          <Route path={'/game/table'} exact component={GameTable} />\r\n          <PrivateRoute path={'/settings'} exact component={SettingsPage} />\r\n          <PrivateRoute path={'/profile'} exact component={Profile} />\r\n          <Route path={'/game/lobby-select'} exact component={LobbySelectPage} />\r\n          <Route path={'/game/lobby'} exact component={LobbyPage} />\r\n          <Route path={'/login'} exact component={Login} />\r\n          <Route path={'/signup'} exact component={Signup} />\r\n        </Switch>\r\n      </AuthProvider>\r\n    </>\r\n  )\r\n}\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport { playerDeckSlice } from './table/player-deck/playerDeckSlice'\r\nimport { opponentsDecksSlice } from './table/opponents-deck/opponentsDecksSlice'\r\nimport { cardStackSlice } from './table/card-stack/cardStackSlice'\r\nimport { discardPileSlice } from './table/discard-pile/discardPileSlice'\r\n\r\nconst rootReducer = combineReducers({\r\n  player: playerDeckSlice.reducer,\r\n  opponents: opponentsDecksSlice.reducer,\r\n  stack: cardStackSlice.reducer,\r\n  discardPile: discardPileSlice.reducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nexport default rootReducer\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n})\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { App } from './components/app/app'\r\nimport { Router } from 'react-router'\r\nimport { history } from './config'\r\nimport { Provider } from 'react-redux'\r\nimport store from './state'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router history={history}>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}